#!/usr/bin/env node

/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è Process Manager HTTP API
 * 
 * –ó–∞–ø—É—Å–∫:
 * 1. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ API —Å–µ—Ä–≤–µ—Ä: npm run start:api
 * 2. –ó–∞—Ç–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç: node examples/demo-api.js
 */

const { ProcessManagerAPI } = require('../src/api-server');
const { ProcessManager } = require('../src/process-manager');

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API —Å–µ—Ä–≤–µ—Ä–∞ —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ –∫–æ–ª–±—ç–∫–∞–º–∏
async function demo() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ API —Å–µ—Ä–≤–µ—Ä–∞ —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ –∫–æ–ª–±—ç–∫–∞–º–∏\n');

  // –°–æ–∑–¥–∞–µ–º ProcessManager
  const processManager = new ProcessManager({
    maxProcesses: 3,
    autoRestart: true,
    logLevel: 'info'
  });

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–æ–ª–±—ç–∫–∏
  const globalCallbacks = {
    onStart: () => {
      console.log('üü¢ [–ì–õ–û–ë–ê–õ–¨–ù–´–ô] –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω!');
    },
    onStop: () => {
      console.log('üî¥ [–ì–õ–û–ë–ê–õ–¨–ù–´–ô] –ü—Ä–æ—Ü–µ—Å—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
    },
    onRestart: () => {
      console.log('üîÑ [–ì–õ–û–ë–ê–õ–¨–ù–´–ô] –ü—Ä–æ—Ü–µ—Å—Å –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!');
    },
    onDelete: () => {
      console.log('üóëÔ∏è [–ì–õ–û–ë–ê–õ–¨–ù–´–ô] –ü—Ä–æ—Ü–µ—Å—Å —É–¥–∞–ª–µ–Ω!');
    }
  };

  // –°–æ–∑–¥–∞–µ–º API —Å–µ—Ä–≤–µ—Ä —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ –∫–æ–ª–±—ç–∫–∞–º–∏
  const apiServer = new ProcessManagerAPI(processManager, 3000, globalCallbacks);

  try {
    // –ó–∞–ø—É—Å–∫–∞–µ–º API —Å–µ—Ä–≤–µ—Ä
    await apiServer.start();
    
    console.log('‚úÖ API —Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000');
    console.log('üìã –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–æ–ª–±—ç–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã:');
    console.log('   - onStart: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ');
    console.log('   - onStop: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Å—Ç–∞–Ω–æ–≤–∫–µ');
    console.log('   - onRestart: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ');
    console.log('   - onDelete: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏');
    console.log('\nüåê –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å HTTP –∑–∞–ø—Ä–æ—Å—ã:');
    console.log('   - POST /processes - —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω–∏—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–æ–ª–±—ç–∫–∏)');
    console.log('\nüí° –í—Å–µ —Å–æ–∑–¥–∞–≤–∞–µ–º—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –∫–æ–ª–±—ç–∫–∏!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
if (require.main === module) {
  demo().catch(console.error);
}

module.exports = { demo };
