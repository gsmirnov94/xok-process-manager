import { ProcessManagerAPI } from '../src/api-server';
import { ProcessManager } from '../src/process-manager';
import { ProcessCallbacks } from '../src/types';

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API —Å–µ—Ä–≤–µ—Ä–∞ —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ –∫–æ–ª–±—ç–∫–∞–º–∏
async function exampleWithGlobalCallbacks() {
  // –°–æ–∑–¥–∞–µ–º ProcessManager
  const processManager = new ProcessManager({
    maxProcesses: 5,
    autoRestart: true,
    logLevel: 'info'
  });

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–æ–ª–±—ç–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø—Ä–∏–º–µ–Ω—è—Ç—å—Å—è –∫–æ –≤—Å–µ–º –ø—Ä–æ—Ü–µ—Å—Å–∞–º
  const globalCallbacks: ProcessCallbacks = {
    onStart: async () => {
      console.log('üü¢ –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∫–æ–ª–±—ç–∫: –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω');
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ª—é–±–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
      // –ù–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ —Ç.–¥.
    },
    onStop: async () => {
      console.log('üî¥ –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∫–æ–ª–±—ç–∫: –ü—Ä–æ—Ü–µ—Å—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      // –õ–æ–≥–∏–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
    },
    onRestart: async () => {
      console.log('üîÑ –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∫–æ–ª–±—ç–∫: –ü—Ä–æ—Ü–µ—Å—Å –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω');
      // –õ–æ–≥–∏–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
    },
    onDelete: async () => {
      console.log('üóëÔ∏è –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∫–æ–ª–±—ç–∫: –ü—Ä–æ—Ü–µ—Å—Å —É–¥–∞–ª–µ–Ω');
      // –õ–æ–≥–∏–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
    }
  };

  // –°–æ–∑–¥–∞–µ–º API —Å–µ—Ä–≤–µ—Ä —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ –∫–æ–ª–±—ç–∫–∞–º–∏
  const apiServer = new ProcessManagerAPI(processManager, 3000, globalCallbacks);

  // –ó–∞–ø—É—Å–∫–∞–µ–º API —Å–µ—Ä–≤–µ—Ä
  await apiServer.start();

  console.log('API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ –∫–æ–ª–±—ç–∫–∞–º–∏');
  console.log('–¢–µ–ø–µ—Ä—å –≤—Å–µ —Å–æ–∑–¥–∞–≤–∞–µ–º—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –∫–æ–ª–±—ç–∫–∏');
}

// –ü—Ä–∏–º–µ—Ä —Å —á–∞—Å—Ç–∏—á–Ω—ã–º–∏ –∫–æ–ª–±—ç–∫–∞–º–∏
async function exampleWithPartialCallbacks() {
  const processManager = new ProcessManager();
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–ª–±—ç–∫–∏
  const partialCallbacks: ProcessCallbacks = {
    onStart: async () => {
      console.log('‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω - –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ');
    },
    onStop: async () => {
      console.log('‚èπÔ∏è –ü—Ä–æ—Ü–µ—Å—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ');
    }
    // onRestart –∏ onDelete –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã - –æ–Ω–∏ –Ω–µ –±—É–¥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è
  };

  const apiServer = new ProcessManagerAPI(processManager, 3001, partialCallbacks);
  await apiServer.start();

  console.log('API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —Å —á–∞—Å—Ç–∏—á–Ω—ã–º–∏ –∫–æ–ª–±—ç–∫–∞–º–∏');
}

// –ü—Ä–∏–º–µ—Ä –±–µ–∑ –∫–æ–ª–±—ç–∫–æ–≤
async function exampleWithoutCallbacks() {
  const processManager = new ProcessManager();
  
  // API —Å–µ—Ä–≤–µ—Ä –±–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –∫–æ–ª–±—ç–∫–æ–≤
  const apiServer = new ProcessManagerAPI(processManager, 3002);
  await apiServer.start();

  console.log('API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –±–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –∫–æ–ª–±—ç–∫–æ–≤');
}

// –ü—Ä–∏–º–µ—Ä –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–ª–±—ç–∫–æ–≤
async function exampleDynamicCallbacks() {
  const processManager = new ProcessManager();
  const apiServer = new ProcessManagerAPI(processManager, 3003);

  await apiServer.start();

  console.log('API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –±–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –∫–æ–ª–±—ç–∫–æ–≤');
  console.log('–ì–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–æ–ª–±—ç–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ');
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–æ–≤
if (require.main === module) {
  (async () => {
    try {
      console.log('=== –ü—Ä–∏–º–µ—Ä —Å –ø–æ–ª–Ω—ã–º–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ –∫–æ–ª–±—ç–∫–∞–º–∏ ===');
      await exampleWithGlobalCallbacks();
      
      console.log('\n=== –ü—Ä–∏–º–µ—Ä —Å —á–∞—Å—Ç–∏—á–Ω—ã–º–∏ –∫–æ–ª–±—ç–∫–∞–º–∏ ===');
      await exampleWithPartialCallbacks();
      
      console.log('\n=== –ü—Ä–∏–º–µ—Ä –±–µ–∑ –∫–æ–ª–±—ç–∫–æ–≤ ===');
      await exampleWithoutCallbacks();
      
      console.log('\n=== –ü—Ä–∏–º–µ—Ä –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–ª–±—ç–∫–æ–≤ ===');
      await exampleDynamicCallbacks();
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ –ø—Ä–∏–º–µ—Ä–∞—Ö:', error);
    }
  })();
}

export {
  exampleWithGlobalCallbacks,
  exampleWithPartialCallbacks,
  exampleWithoutCallbacks,
  exampleDynamicCallbacks
};
